// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `ykdata.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.gridnt.icestorm.Yk;

/**
 * Provides type-specific helper functions.
 **/
public final class YkFepManagerPrxHelper extends Ice.ObjectPrxHelperBase implements YkFepManagerPrx
{
    private static final String __cancel_name = "cancel";

    public void cancel(YkCommand cmd)
    {
        cancel(cmd, null, false);
    }

    public void cancel(YkCommand cmd, java.util.Map<String, String> __ctx)
    {
        cancel(cmd, __ctx, true);
    }

    private void cancel(YkCommand cmd, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_cancel(begin_cancel(cmd, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd)
    {
        return begin_cancel(cmd, null, false, false, null);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, java.util.Map<String, String> __ctx)
    {
        return begin_cancel(cmd, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, Ice.Callback __cb)
    {
        return begin_cancel(cmd, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_cancel(cmd, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, Callback_YkFepManager_cancel __cb)
    {
        return begin_cancel(cmd, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, java.util.Map<String, String> __ctx, Callback_YkFepManager_cancel __cb)
    {
        return begin_cancel(cmd, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_cancel(cmd, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_cancel(cmd, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_cancel(cmd, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_cancel(YkCommand cmd, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_cancel(cmd, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_cancel(YkCommand cmd, 
                                         java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_cancel(cmd, 
                            __ctx, 
                            __explicitCtx, 
                            __synchronous, 
                            new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_cancel(YkCommand cmd, 
                                         java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__cancel_name, __cb);
        try
        {
            __result.prepare(__cancel_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            YkCommand.__write(__os, cmd);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_cancel(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __cancel_name);
    }

    private static final String __execute_name = "execute";

    public void execute(YkCommand cmd)
    {
        execute(cmd, null, false);
    }

    public void execute(YkCommand cmd, java.util.Map<String, String> __ctx)
    {
        execute(cmd, __ctx, true);
    }

    private void execute(YkCommand cmd, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_execute(begin_execute(cmd, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd)
    {
        return begin_execute(cmd, null, false, false, null);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, java.util.Map<String, String> __ctx)
    {
        return begin_execute(cmd, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, Ice.Callback __cb)
    {
        return begin_execute(cmd, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_execute(cmd, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, Callback_YkFepManager_execute __cb)
    {
        return begin_execute(cmd, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, java.util.Map<String, String> __ctx, Callback_YkFepManager_execute __cb)
    {
        return begin_execute(cmd, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_execute(cmd, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_execute(cmd, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_execute(cmd, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_execute(YkCommand cmd, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_execute(cmd, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_execute(YkCommand cmd, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_execute(cmd, 
                             __ctx, 
                             __explicitCtx, 
                             __synchronous, 
                             new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_execute(YkCommand cmd, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__execute_name, __cb);
        try
        {
            __result.prepare(__execute_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            YkCommand.__write(__os, cmd);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_execute(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __execute_name);
    }

    private static final String __select_name = "select";

    public void select(YkCommand cmd)
    {
        select(cmd, null, false);
    }

    public void select(YkCommand cmd, java.util.Map<String, String> __ctx)
    {
        select(cmd, __ctx, true);
    }

    private void select(YkCommand cmd, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_select(begin_select(cmd, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_select(YkCommand cmd)
    {
        return begin_select(cmd, null, false, false, null);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, java.util.Map<String, String> __ctx)
    {
        return begin_select(cmd, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, Ice.Callback __cb)
    {
        return begin_select(cmd, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_select(cmd, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, Callback_YkFepManager_select __cb)
    {
        return begin_select(cmd, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, java.util.Map<String, String> __ctx, Callback_YkFepManager_select __cb)
    {
        return begin_select(cmd, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_select(cmd, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_select(cmd, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_select(cmd, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_select(YkCommand cmd, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_select(cmd, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_select(YkCommand cmd, 
                                         java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_select(cmd, 
                            __ctx, 
                            __explicitCtx, 
                            __synchronous, 
                            new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_select(YkCommand cmd, 
                                         java.util.Map<String, String> __ctx, 
                                         boolean __explicitCtx, 
                                         boolean __synchronous, 
                                         IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__select_name, __cb);
        try
        {
            __result.prepare(__select_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            YkCommand.__write(__os, cmd);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_select(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __select_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static YkFepManagerPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), YkFepManagerPrx.class, YkFepManagerPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static YkFepManagerPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), YkFepManagerPrx.class, YkFepManagerPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static YkFepManagerPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), YkFepManagerPrx.class, YkFepManagerPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static YkFepManagerPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), YkFepManagerPrx.class, YkFepManagerPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static YkFepManagerPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, YkFepManagerPrx.class, YkFepManagerPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static YkFepManagerPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, YkFepManagerPrx.class, YkFepManagerPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::Yk::YkFepManager"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, YkFepManagerPrx v)
    {
        __os.writeProxy(v);
    }

    public static YkFepManagerPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            YkFepManagerPrxHelper result = new YkFepManagerPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
