// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `ykdata.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.gridnt.icestorm.Yk;

/**
 * 1. AppSrv发送Select、Execute或Cancel给FEP，FEP及时反应是否正确接收命令。
 * 2. FEP发送命令报文给Unit时，以Echo通知AppSrv。
 * 3. FEP接收到Unit返校报文，以Return通知AppSrv。
 **/
public enum YkStep implements java.io.Serializable
{
    
    Select(0),
    
    FepRecvSelect(1),
    
    SelectReturn(2),
    
    Execute(3),
    
    FepRecvExecute(4),
    
    ExecuteReturn(5),
    
    Cancel(6),
    
    FepRecvCancel(7),
    
    CancelReturn(8);

    public int
    value()
    {
        return __value;
    }

    public static YkStep
    valueOf(int __v)
    {
        switch(__v)
        {
        case 0:
            return Select;
        case 1:
            return FepRecvSelect;
        case 2:
            return SelectReturn;
        case 3:
            return Execute;
        case 4:
            return FepRecvExecute;
        case 5:
            return ExecuteReturn;
        case 6:
            return Cancel;
        case 7:
            return FepRecvCancel;
        case 8:
            return CancelReturn;
        }
        return null;
    }

    private
    YkStep(int __v)
    {
        __value = __v;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeEnum(value(), 8);
    }

    public static void
    __write(IceInternal.BasicStream __os, YkStep __v)
    {
        if(__v == null)
        {
            __os.writeEnum(com.gridnt.icestorm.Yk.YkStep.Select.value(), 8);
        }
        else
        {
            __os.writeEnum(__v.value(), 8);
        }
    }

    public static YkStep
    __read(IceInternal.BasicStream __is)
    {
        int __v = __is.readEnum(8);
        return __validate(__v);
    }

    private static YkStep
    __validate(int __v)
    {
        final YkStep __e = valueOf(__v);
        if(__e == null)
        {
            throw new Ice.MarshalException("enumerator value " + __v + " is out of range");
        }
        return __e;
    }

    private final int __value;
}
