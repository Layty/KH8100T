// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `wavefepapp.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.kh.scada.wavefepapp;

public class SRFWSOE implements java.lang.Cloneable, java.io.Serializable
{
    public long TimeStamp;

    public short yxNo;

    public short value;

    public SRFWSOE()
    {
    }

    public SRFWSOE(long TimeStamp, short yxNo, short value)
    {
        this.TimeStamp = TimeStamp;
        this.yxNo = yxNo;
        this.value = value;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SRFWSOE _r = null;
        if(rhs instanceof SRFWSOE)
        {
            _r = (SRFWSOE)rhs;
        }

        if(_r != null)
        {
            if(TimeStamp != _r.TimeStamp)
            {
                return false;
            }
            if(yxNo != _r.yxNo)
            {
                return false;
            }
            if(value != _r.value)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::wavefepapp::SRFWSOE");
        __h = IceInternal.HashUtil.hashAdd(__h, TimeStamp);
        __h = IceInternal.HashUtil.hashAdd(__h, yxNo);
        __h = IceInternal.HashUtil.hashAdd(__h, value);
        return __h;
    }

    public SRFWSOE
    clone()
    {
        SRFWSOE c = null;
        try
        {
            c = (SRFWSOE)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeLong(TimeStamp);
        __os.writeShort(yxNo);
        __os.writeShort(value);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        TimeStamp = __is.readLong();
        yxNo = __is.readShort();
        value = __is.readShort();
    }

    static public void
    __write(IceInternal.BasicStream __os, SRFWSOE __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public SRFWSOE
    __read(IceInternal.BasicStream __is, SRFWSOE __v)
    {
        if(__v == null)
        {
             __v = new SRFWSOE();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final SRFWSOE __nullMarshalValue = new SRFWSOE();

    public static final long serialVersionUID = 1607828119L;
}
