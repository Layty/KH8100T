// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `wavefepapp.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.kh.scada.wavefepapp;

public interface RfwFepManagerPrx extends Ice.ObjectPrx
{
    /**
     * @param: unitno - 终端号。
     * @param: operateType - 操作类型。
     **/
    public void rfwExecute(RfwOperate operate);

    /**
     * @param: unitno - 终端号。
     * @param: operateType - 操作类型。
     * @param __ctx The Context map to send with the invocation.
     **/
    public void rfwExecute(RfwOperate operate, java.util.Map<String, String> __ctx);

    /**
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate);

    /**
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, java.util.Map<String, String> __ctx);

    /**
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, Ice.Callback __cb);

    /**
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, Callback_RfwFepManager_rfwExecute __cb);

    /**
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, java.util.Map<String, String> __ctx, Callback_RfwFepManager_rfwExecute __cb);

    /**
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    /**
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_rfwExecute(RfwOperate operate, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    /**
     * @param __result The asynchronous result object.
     **/
    public void end_rfwExecute(Ice.AsyncResult __result);
}
