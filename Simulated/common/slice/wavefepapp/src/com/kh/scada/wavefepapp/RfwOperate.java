// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `wavefepapp.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.kh.scada.wavefepapp;

public class RfwOperate implements java.lang.Cloneable, java.io.Serializable
{
    public short unitno;

    public short lineno;

    public RfwOperateType operateType;

    public short filename;

    public int requestId;

    public RfwOperate()
    {
        operateType = RfwOperateType.DUGRFWDIR;
    }

    public RfwOperate(short unitno, short lineno, RfwOperateType operateType, short filename, int requestId)
    {
        this.unitno = unitno;
        this.lineno = lineno;
        this.operateType = operateType;
        this.filename = filename;
        this.requestId = requestId;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        RfwOperate _r = null;
        if(rhs instanceof RfwOperate)
        {
            _r = (RfwOperate)rhs;
        }

        if(_r != null)
        {
            if(unitno != _r.unitno)
            {
                return false;
            }
            if(lineno != _r.lineno)
            {
                return false;
            }
            if(operateType != _r.operateType)
            {
                if(operateType == null || _r.operateType == null || !operateType.equals(_r.operateType))
                {
                    return false;
                }
            }
            if(filename != _r.filename)
            {
                return false;
            }
            if(requestId != _r.requestId)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::wavefepapp::RfwOperate");
        __h = IceInternal.HashUtil.hashAdd(__h, unitno);
        __h = IceInternal.HashUtil.hashAdd(__h, lineno);
        __h = IceInternal.HashUtil.hashAdd(__h, operateType);
        __h = IceInternal.HashUtil.hashAdd(__h, filename);
        __h = IceInternal.HashUtil.hashAdd(__h, requestId);
        return __h;
    }

    public RfwOperate
    clone()
    {
        RfwOperate c = null;
        try
        {
            c = (RfwOperate)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeShort(unitno);
        __os.writeShort(lineno);
        RfwOperateType.__write(__os, operateType);
        __os.writeShort(filename);
        __os.writeInt(requestId);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        unitno = __is.readShort();
        lineno = __is.readShort();
        operateType = RfwOperateType.__read(__is);
        filename = __is.readShort();
        requestId = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, RfwOperate __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public RfwOperate
    __read(IceInternal.BasicStream __is, RfwOperate __v)
    {
        if(__v == null)
        {
             __v = new RfwOperate();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final RfwOperate __nullMarshalValue = new RfwOperate();

    public static final long serialVersionUID = 1947673653L;
}
