// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `rdbdata.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.gridnt.icestorm.RdbRealData;

public class PowerInfo implements java.lang.Cloneable, java.io.Serializable
{
    public String powerType;

    public String powerRID;

    public String powerName;

    public java.util.List<PowerAnalogInfo> analogInfoes;

    public PowerInfo()
    {
        powerType = "";
        powerRID = "";
        powerName = "";
    }

    public PowerInfo(String powerType, String powerRID, String powerName, java.util.List<PowerAnalogInfo> analogInfoes)
    {
        this.powerType = powerType;
        this.powerRID = powerRID;
        this.powerName = powerName;
        this.analogInfoes = analogInfoes;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PowerInfo _r = null;
        if(rhs instanceof PowerInfo)
        {
            _r = (PowerInfo)rhs;
        }

        if(_r != null)
        {
            if(powerType != _r.powerType)
            {
                if(powerType == null || _r.powerType == null || !powerType.equals(_r.powerType))
                {
                    return false;
                }
            }
            if(powerRID != _r.powerRID)
            {
                if(powerRID == null || _r.powerRID == null || !powerRID.equals(_r.powerRID))
                {
                    return false;
                }
            }
            if(powerName != _r.powerName)
            {
                if(powerName == null || _r.powerName == null || !powerName.equals(_r.powerName))
                {
                    return false;
                }
            }
            if(analogInfoes != _r.analogInfoes)
            {
                if(analogInfoes == null || _r.analogInfoes == null || !analogInfoes.equals(_r.analogInfoes))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::RdbRealData::PowerInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, powerType);
        __h = IceInternal.HashUtil.hashAdd(__h, powerRID);
        __h = IceInternal.HashUtil.hashAdd(__h, powerName);
        __h = IceInternal.HashUtil.hashAdd(__h, analogInfoes);
        return __h;
    }

    public PowerInfo
    clone()
    {
        PowerInfo c = null;
        try
        {
            c = (PowerInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(powerType);
        __os.writeString(powerRID);
        __os.writeString(powerName);
        PowerAnalogInfoSeqHelper.write(__os, analogInfoes);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        powerType = __is.readString();
        powerRID = __is.readString();
        powerName = __is.readString();
        analogInfoes = PowerAnalogInfoSeqHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, PowerInfo __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public PowerInfo
    __read(IceInternal.BasicStream __is, PowerInfo __v)
    {
        if(__v == null)
        {
             __v = new PowerInfo();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final PowerInfo __nullMarshalValue = new PowerInfo();

    public static final long serialVersionUID = 1013418953L;
}
