// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `rdbdata.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.gridnt.icestorm.RdbRealData;

public class RespondDefaultData implements java.lang.Cloneable, java.io.Serializable
{
    public String tableName;

    public String dataRid;

    public String dataValue;

    public RespondDefaultData()
    {
        tableName = "";
        dataRid = "";
        dataValue = "";
    }

    public RespondDefaultData(String tableName, String dataRid, String dataValue)
    {
        this.tableName = tableName;
        this.dataRid = dataRid;
        this.dataValue = dataValue;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        RespondDefaultData _r = null;
        if(rhs instanceof RespondDefaultData)
        {
            _r = (RespondDefaultData)rhs;
        }

        if(_r != null)
        {
            if(tableName != _r.tableName)
            {
                if(tableName == null || _r.tableName == null || !tableName.equals(_r.tableName))
                {
                    return false;
                }
            }
            if(dataRid != _r.dataRid)
            {
                if(dataRid == null || _r.dataRid == null || !dataRid.equals(_r.dataRid))
                {
                    return false;
                }
            }
            if(dataValue != _r.dataValue)
            {
                if(dataValue == null || _r.dataValue == null || !dataValue.equals(_r.dataValue))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::RdbRealData::RespondDefaultData");
        __h = IceInternal.HashUtil.hashAdd(__h, tableName);
        __h = IceInternal.HashUtil.hashAdd(__h, dataRid);
        __h = IceInternal.HashUtil.hashAdd(__h, dataValue);
        return __h;
    }

    public RespondDefaultData
    clone()
    {
        RespondDefaultData c = null;
        try
        {
            c = (RespondDefaultData)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(tableName);
        __os.writeString(dataRid);
        __os.writeString(dataValue);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        tableName = __is.readString();
        dataRid = __is.readString();
        dataValue = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, RespondDefaultData __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public RespondDefaultData
    __read(IceInternal.BasicStream __is, RespondDefaultData __v)
    {
        if(__v == null)
        {
             __v = new RespondDefaultData();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final RespondDefaultData __nullMarshalValue = new RespondDefaultData();

    public static final long serialVersionUID = -462366891L;
}
