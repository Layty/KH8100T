// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `rdbdata.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.gridnt.icestorm.RdbRealData;

public class LineAndStationInfo implements java.lang.Cloneable, java.io.Serializable
{
    public String lineRid;

    public String lineName;

    public String linePath;

    public String stationRid;

    public String stationName;

    public String stationPath;

    public LineAndStationInfo()
    {
        lineRid = "";
        lineName = "";
        linePath = "";
        stationRid = "";
        stationName = "";
        stationPath = "";
    }

    public LineAndStationInfo(String lineRid, String lineName, String linePath, String stationRid, String stationName, String stationPath)
    {
        this.lineRid = lineRid;
        this.lineName = lineName;
        this.linePath = linePath;
        this.stationRid = stationRid;
        this.stationName = stationName;
        this.stationPath = stationPath;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LineAndStationInfo _r = null;
        if(rhs instanceof LineAndStationInfo)
        {
            _r = (LineAndStationInfo)rhs;
        }

        if(_r != null)
        {
            if(lineRid != _r.lineRid)
            {
                if(lineRid == null || _r.lineRid == null || !lineRid.equals(_r.lineRid))
                {
                    return false;
                }
            }
            if(lineName != _r.lineName)
            {
                if(lineName == null || _r.lineName == null || !lineName.equals(_r.lineName))
                {
                    return false;
                }
            }
            if(linePath != _r.linePath)
            {
                if(linePath == null || _r.linePath == null || !linePath.equals(_r.linePath))
                {
                    return false;
                }
            }
            if(stationRid != _r.stationRid)
            {
                if(stationRid == null || _r.stationRid == null || !stationRid.equals(_r.stationRid))
                {
                    return false;
                }
            }
            if(stationName != _r.stationName)
            {
                if(stationName == null || _r.stationName == null || !stationName.equals(_r.stationName))
                {
                    return false;
                }
            }
            if(stationPath != _r.stationPath)
            {
                if(stationPath == null || _r.stationPath == null || !stationPath.equals(_r.stationPath))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::RdbRealData::LineAndStationInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, lineRid);
        __h = IceInternal.HashUtil.hashAdd(__h, lineName);
        __h = IceInternal.HashUtil.hashAdd(__h, linePath);
        __h = IceInternal.HashUtil.hashAdd(__h, stationRid);
        __h = IceInternal.HashUtil.hashAdd(__h, stationName);
        __h = IceInternal.HashUtil.hashAdd(__h, stationPath);
        return __h;
    }

    public LineAndStationInfo
    clone()
    {
        LineAndStationInfo c = null;
        try
        {
            c = (LineAndStationInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(lineRid);
        __os.writeString(lineName);
        __os.writeString(linePath);
        __os.writeString(stationRid);
        __os.writeString(stationName);
        __os.writeString(stationPath);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        lineRid = __is.readString();
        lineName = __is.readString();
        linePath = __is.readString();
        stationRid = __is.readString();
        stationName = __is.readString();
        stationPath = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, LineAndStationInfo __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public LineAndStationInfo
    __read(IceInternal.BasicStream __is, LineAndStationInfo __v)
    {
        if(__v == null)
        {
             __v = new LineAndStationInfo();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final LineAndStationInfo __nullMarshalValue = new LineAndStationInfo();

    public static final long serialVersionUID = 829707728L;
}
