// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `amssrv.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.kh.ams.Amssrv;

/**
 * AMS Manager×Ô¼º½Ó¿Ú
 *
 **/
public interface CAmsManagerPrx extends Ice.ObjectPrx
{
    /**
     * AMS Manager×¢²á
     *
     **/
    public void Register(String strServerName, String strRole)
        throws CAmsException;

    /**
     * AMS Manager×¢²á
     *
     * @param __ctx The Context map to send with the invocation.
     **/
    public void Register(String strServerName, String strRole, java.util.Map<String, String> __ctx)
        throws CAmsException;

    /**
     * AMS Manager×¢²á
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, String strRole);

    /**
     * AMS Manager×¢²á
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, String strRole, java.util.Map<String, String> __ctx);

    /**
     * AMS Manager×¢²á
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, String strRole, Ice.Callback __cb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, String strRole, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, String strRole, Callback_CAmsManager_Register __cb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, String strRole, java.util.Map<String, String> __ctx, Callback_CAmsManager_Register __cb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, 
                                          String strRole, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, 
                                          String strRole, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, 
                                          String strRole, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_Register(String strServerName, 
                                          String strRole, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * AMS Manager×¢²á
     * 
     * @param __result The asynchronous result object.
     **/
    public void end_Register(Ice.AsyncResult __result)
        throws CAmsException;

    public void Quit();

    public void Quit(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Quit();

    public Ice.AsyncResult begin_Quit(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Quit(Ice.Callback __cb);

    public Ice.AsyncResult begin_Quit(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_Quit(Callback_CAmsManager_Quit __cb);

    public Ice.AsyncResult begin_Quit(java.util.Map<String, String> __ctx, Callback_CAmsManager_Quit __cb);

    public Ice.AsyncResult begin_Quit(IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_Quit(IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_Quit(java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_Quit(java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public void end_Quit(Ice.AsyncResult __result);

    public void AmsHeartBeat(String strServerName);

    public void AmsHeartBeat(String strServerName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, Ice.Callback __cb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, Callback_CAmsManager_AmsHeartBeat __cb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, java.util.Map<String, String> __ctx, Callback_CAmsManager_AmsHeartBeat __cb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_AmsHeartBeat(String strServerName, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    public void end_AmsHeartBeat(Ice.AsyncResult __result);
}
